@page "/arbitrage"
@inject NavigationManager NavigationManager
@using IdentifyingArbitrage.Models
@inject GameService GameService

<PageTitle>Calculate Arbitrage</PageTitle>

<h1>Calculate Arbitrage</h1>

@if (GameService.SelectedGame != null)
{
	<table class="table">
		<thead>
		<tr>
			<th>Name</th>
			<th>Best Odds</th>
			<th>Stake</th>
			<th>Best Book</th>
			<th>Payout</th>
		</tr>
		</thead>
		<tbody>
		<tr>
			<td>@GameService.SelectedGame.Teams[0].Name</td>
			<td><input type="number" value="@GameService.SelectedGame.Teams[0].BestOdds"/></td>
			<td>Calculate Stake</td>
			<td>@GameService.SelectedGame.Teams[0].BestBook</td>
			<td>Calculate based on stake and odds</td>
		</tr>
		<tr>
			<td>@GameService.SelectedGame.Teams[1].Name</td>
			<td><input type="number" value="@GameService.SelectedGame.Teams[1].BestOdds" /></td>
			<td>Calculate Stake</td>
			<td>@GameService.SelectedGame.Teams[1].BestBook</td>
			<td>Calculate based on stake and odds</td>
		</tr>
		</tbody>
	</table>
}
else
{
	<table class="table">
		<thead>
		<tr>
			<th>Name</th>
			<th>Best Odds</th>
			<th>Stake</th>
			<th>Payout</th>
		</tr>
		</thead>
		<tbody>
		<tr>
			<td>Team A</td>
			<td><input type="number" value=""/></td>
			<td>Calculate stake</td>
			<td>Calculate based on stake and odds</td>
		</tr>
		<tr>
			<td>Team B</td>
			<td><input type="number" value="" /></td>
			<td>Calculate stake</td>
			<td>Calculate based on stake and odds</td>
		</tr>
		</tbody>
	</table>
}

<table class="table2">
	<thead>
	<tr>
		<th></th>
		<th></th>
	</tr>
	</thead>
	<tbody>
	<tr>
		<th id="numInput">Total Stake: $<input type="number"/></th>
			<th class="secondColumn">Total Payout: $</th>
	</tr>
	<tr>
		<th><input id="button" type="button" value="Calculate"/></th>
		<th class="secondColumn">Total Profit: $</th>
	</tr>
	<tr>
		<th></th>
			<th class="secondColumn">ROI:</th>
	</tr>
	</tbody>
</table>

<style>
	h1 {
		width: 100%;
		text-align: center;
		margin-top: 30px;
		margin-left: auto;
		margin-right: auto;
		margin-bottom:40px;
	}

	.table {
		width: 80%;
		border-collapse: collapse;
		margin-right: auto;
		margin-left: auto;
		margin-bottom: 40px;
	}

	.table tbody{
		text-align: center
	}

	.table tbody tr:hover {
		transition: background-color 0.3s;
		background-color: #ddd;
	}

	.table thead{
		background-color: #f2f2f2;
	}

		.table th,
		.table td {
			border: 1px solid #ddd;
			padding: 8px;
			text-align: center;
		}

	.table2 {
		width: 50%;
		margin-left: auto;
		margin-right:auto;
	}

		.table2 th {
			padding:10px;
			text-align: left;
		}

		.table2 input[type="number"] {
			border: 1px solid #ccc;
			text-align: center;
			padding: 8px;
			background-color: rgba(240, 240, 240, 0.7);
		}

		.table2 input[type="number"]:hover{
			background-color: rgba(240, 240, 240, 1);
		}

		.table2 #button {
			border: 1px solid #ccc;
			padding: 8px;
			background-color: rgba(76, 175, 80, 0.6);
			margin-left: 160px;
			margin-top: 10px;
			
		}

		.table2 #button:hover{
			transition: background-color 0.3s;
			padding: 8px;
			background-color: rgba(76, 175, 80, 1);
</style>

@code {
    [Parameter] public string team1Name { get; set; }
    [Parameter] public string team2Name { get; set; }
    [Parameter] public double team1MoneyLine { get; set; }
    [Parameter] public double team2MoneyLine { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Use the captured parameters as needed
        // You can access team1Name, team2Name, team1MoneyLine, and team2MoneyLine here
    }
}